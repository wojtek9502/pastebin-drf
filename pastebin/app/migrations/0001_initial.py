# Generated by Django 5.0.3 on 2024-03-22 19:55

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('inserted_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('NONE', 'None'), ('CRYPTOCURRENCY', 'Cryptocurrency'), ('CYBERSECURITY', 'Cybersecurity'), ('FIXIT', 'Fixit'), ('FOOD', 'Food'), ('GAMING', 'Gaming'), ('HAIKU', 'Haiku'), ('HELP', 'Help'), ('HISTORY', 'History'), ('HOUSING', 'Housing'), ('JOKES', 'Jokes'), ('LEGAL', 'Legal'), ('MONEY', 'Money'), ('MOVIES', 'Movies'), ('MUSIC', 'Music'), ('PETS', 'Pets'), ('PHOTO', 'Photo'), ('SCIENCE', 'Science'), ('SOFTWARE', 'Software'), ('SOURCE_CODE', 'Source Code'), ('SPIRIT', 'Spirit'), ('SPORTS', 'Sports'), ('TRAVEL', 'Travel'), ('TV', 'Tv'), ('WRITING', 'Writing')], max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('inserted_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('NONE', 'None'), ('CRYPTOCURRENCY', 'Cryptocurrency'), ('CYBERSECURITY', 'Cybersecurity'), ('FIXIT', 'Fixit'), ('FOOD', 'Food'), ('GAMING', 'Gaming'), ('HAIKU', 'Haiku'), ('HELP', 'Help'), ('HISTORY', 'History'), ('HOUSING', 'Housing'), ('JOKES', 'Jokes'), ('LEGAL', 'Legal'), ('MONEY', 'Money'), ('MOVIES', 'Movies'), ('MUSIC', 'Music'), ('PETS', 'Pets'), ('PHOTO', 'Photo'), ('SCIENCE', 'Science'), ('SOFTWARE', 'Software'), ('SOURCE_CODE', 'Source Code'), ('SPIRIT', 'Spirit'), ('SPORTS', 'Sports'), ('TRAVEL', 'Travel'), ('TV', 'Tv'), ('WRITING', 'Writing')], max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='NoteModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('inserted_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(verbose_name=1024)),
                ('text', models.TextField()),
                ('link_slug', models.SlugField(max_length=120)),
                ('expiration_type', models.CharField(choices=[('NEVER', 'Never'), ('BURN_AFTER_READ', 'Burn After Read'), ('TEN_MINUTES', 'Ten Minutes'), ('ONE_HOUR', 'One Hour'), ('ONE_DAY', 'One Day'), ('ONE_WEEK', 'One Week'), ('TWO_WEEKS', 'Two Weeks'), ('ONE_MONTH', 'One Month'), ('TWO_MONTHS', 'Two Months'), ('THREE_MONTHS', 'Three Months'), ('SIX_MONTHS', 'Six Months'), ('ONE_YEAR', 'One Year')], default='NEVER', max_length=50)),
                ('exposure_type', models.CharField(choices=[('PUBLIC', 'Public'), ('UNLISTED', 'Unlisted'), ('PRIVATE', 'Private')], default='PUBLIC', max_length=50)),
                ('syntax', models.CharField(choices=[('NONE', 'None'), ('6502_TASM/64TASS', 'Tass'), ('ABAP', 'Abap'), ('AIMMS', 'Aimms'), ('ALGOL_68', 'Algol 68'), ('APT_SOURCES', 'Apt Sources'), ('ARM', 'Arm'), ('ASM_NASM', 'Asm Nasm'), ('ASP', 'Asp'), ('ACTIONSCRIPT', 'Actionscript'), ('ACTIONSCRIPT_3', 'Actionscript 3'), ('ADA', 'Ada'), ('APACHE_LOG', 'Apache Log'), ('APPLESCRIPT', 'Applescript'), ('ARDUINO', 'Arduino'), ('ASYMPTOTE', 'Asymptote'), ('AUTOIT', 'Autoit'), ('AUTOHOTKEY', 'Autohotkey'), ('AVISYNTH', 'Avisynth'), ('AWK', 'Awk'), ('BASCOM_AVR', 'Bascom Avr'), ('BNF', 'Bnf'), ('BOO', 'Boo'), ('BASH', 'Bash'), ('BASIC4GL', 'Basic4Gl'), ('BATCH', 'Batch'), ('BIBTEX', 'Bibtex'), ('BLITZ_BASIC', 'Blitz Basic'), ('BLITZ3D', 'Blitz3D'), ('BLITZMAX', 'Blitzmax'), ('BRAINFUCK', 'Brainfuck'), ('C', 'C'), ('C_WINAPI', 'C Winapi'), ('C_INTERMEDIATE_LANGUAGE', 'C Intermediate Language'), ('C_FOR_MACS', 'C For Macs'), ('C_SHARP', 'C Sharp'), ('C_PLUS_PLUS', 'C Plus Plus'), ('CAD_DCL', 'Cad Dcl'), ('CAD_LISP', 'Cad Lisp'), ('CFDG', 'Cfdg'), ('CMAKE', 'Cmake'), ('COBOL', 'Cobol'), ('CSS', 'Css'), ('CEYLON', 'Ceylon'), ('CHAISCRIPT', 'Chaiscript'), ('CHAPEL', 'Chapel'), ('CLOJURE', 'Clojure'), ('CLONE_C', 'Clone C'), ('COFFEESCRIPT', 'Coffeescript'), ('COLDFUSION', 'Coldfusion'), ('CUESHEET', 'Cuesheet'), ('D', 'D'), ('DCL', 'Dcl'), ('DCS', 'Dcs'), ('DIV', 'Div'), ('DOT', 'Dot'), ('DART', 'Dart'), ('DELPHI', 'Delphi'), ('DIFF', 'Diff'), ('E', 'E'), ('ECMASCRIPT', 'Ecmascript'), ('EPC', 'Epc'), ('EASYTRIEVE', 'Easytrieve'), ('EIFFEL', 'Eiffel'), ('EMAIL', 'Email'), ('ERLANG', 'Erlang'), ('EUPHORIA', 'Euphoria'), ('F_SHARP', 'F Sharp'), ('FO_LANGUAGE', 'Fo Language'), ('FALCON', 'Falcon'), ('FILEMAKER', 'Filemaker'), ('FORMULA_ONE', 'Formula One'), ('FORTRAN', 'Fortran'), ('FREEBASIC', 'Freebasic'), ('FREESWITCH', 'Freeswitch'), ('GAMBAS', 'Gambas'), ('GDB', 'Gdb'), ('GDSCRIPT', 'Gdscript'), ('GAME_MAKER', 'Game Maker'), ('GENERO', 'Genero'), ('GENIE', 'Genie'), ('GETTEXT', 'Gettext'), ('GO', 'Go'), ('GODOT_GLSL', 'Godot Glsl'), ('GROOVY', 'Groovy'), ('GWBASIC', 'Gwbasic'), ('HQ9_PLUS', 'Hq9 Plus'), ('HTML', 'Html'), ('HTML_5', 'Html 5'), ('HASKELL', 'Haskell'), ('HAXE', 'Haxe'), ('HICEST', 'Hicest'), ('IDL', 'Idl'), ('INI_FILE', 'Ini File'), ('INTERCAL', 'Intercal'), ('IO', 'Io'), ('ISPF_PANEL_DEFINITION', 'Ispf Panel Definition'), ('ICON', 'Icon'), ('INNO_SCRIPT', 'Inno Script'), ('J', 'J'), ('JCL', 'Jcl'), ('JSON', 'Json'), ('JAVA', 'Java'), ('JAVA_5', 'Java 5'), ('JAVASCRIPT', 'Javascript'), ('JULIA', 'Julia'), ('KIXTART', 'Kixtart'), ('KOTLIN', 'Kotlin'), ('LDIF', 'Ldif'), ('LLVM', 'Llvm'), ('LOL_CODE', 'Lol Code'), ('LSCRIPT', 'Lscript'), ('LATEX', 'Latex'), ('LIBERTY_BASIC', 'Liberty Basic'), ('LINDEN_SCRIPTING', 'Linden Scripting'), ('LISP', 'Lisp'), ('LOCO_BASIC', 'Loco Basic'), ('LOGTALK', 'Logtalk'), ('LOTUS_FORMULAS', 'Lotus Formulas'), ('LOTUS_SCRIPT', 'Lotus Script'), ('LUA', 'Lua'), ('M68000_ASSEMBLER', 'M68000 Assembler'), ('MIX_ASSEMBLER', 'Mix Assembler'), ('MPASM', 'Mpasm'), ('MXML', 'Mxml'), ('MAGIKSF', 'Magiksf'), ('MAKE', 'Make'), ('MAPBASIC', 'Mapbasic'), ('MATLAB', 'Matlab'), ('MERCURY', 'Mercury'), ('METAPOST', 'Metapost'), ('MODULA_2', 'Modula 2'), ('MODULA_3', 'Modula 3'), ('MOTOROLA_68000_HISOFT_DEV', 'Motorola 68000 Hisoft Dev'), ('MYSQL', 'Mysql'), ('NAGIOS', 'Nagios'), ('NETREXX', 'Netrexx'), ('NGINX', 'Nginx'), ('NIM', 'Nim'), ('NULLSOFT_INSTALLER', 'Nullsoft Installer'), ('OCAML', 'Ocaml'), ('OCAML_BRIEF', 'Ocaml Brief'), ('OBERON_2', 'Oberon 2'), ('OBJECK_PROGRAMMING_LANGUA', 'Objeck Programming Langua'), ('OBJECTIVE_C', 'Objective C'), ('OCTAVE', 'Octave'), ('OPEN_OBJECT_REXX', 'Open Object Rexx'), ('OPENBSD_PACKET_FILTER', 'Openbsd Packet Filter'), ('OPENGL_SHADING', 'Opengl Shading'), ('OPENOFFICE_BASIC', 'Openoffice Basic'), ('ORACLE_11', 'Oracle 11'), ('ORACLE_8', 'Oracle 8'), ('OZ', 'Oz'), ('PCRE', 'Pcre'), ('PHP', 'Php'), ('PHP_BRIEF', 'Php Brief'), ('PL_SQL', 'Pl Sql'), ('PARASAIL', 'Parasail'), ('PASCAL', 'Pascal'), ('PAWN', 'Pawn'), ('PER', 'Per'), ('PERL', 'Perl'), ('PERL_6', 'Perl 6'), ('PHIX', 'Phix'), ('PIC_16', 'Pic 16'), ('PIKE', 'Pike'), ('PIXEL_BENDER', 'Pixel Bender'), ('POSTSCRIPT', 'Postscript'), ('POSTGRESQL', 'Postgresql'), ('POWERBUILDER', 'Powerbuilder'), ('POWERSHELL', 'Powershell'), ('PROFTPD', 'Proftpd'), ('PROGRESS', 'Progress'), ('PROLOG', 'Prolog'), ('PROPERTIES', 'Properties'), ('PROVIDEX', 'Providex'), ('PUPPET', 'Puppet'), ('PUREBASIC', 'Purebasic'), ('PYCON', 'Pycon'), ('PYTHON', 'Python'), ('PYTHON_FOR_S60', 'Python For S60'), ('QBASIC', 'Qbasic'), ('QML', 'Qml'), ('R', 'R'), ('RBSCRIPT', 'Rbscript'), ('REBOL', 'Rebol'), ('REG', 'Reg'), ('RPM_SPEC', 'Rpm Spec'), ('RACKET', 'Racket'), ('RAILS', 'Rails'), ('REXX', 'Rexx'), ('ROBOTS', 'Robots'), ('ROFF_MANPAGE', 'Roff Manpage'), ('RUBY', 'Ruby'), ('RUBY_GNUPLOT', 'Ruby Gnuplot'), ('RUST', 'Rust'), ('SAS', 'Sas'), ('SCL', 'Scl'), ('SPARK', 'Spark'), ('SPARQL', 'Sparql'), ('SQF', 'Sqf'), ('SQL', 'Sql'), ('SSH_CONFIG', 'Ssh Config'), ('SCALA', 'Scala'), ('SCHEME', 'Scheme'), ('SCILAB', 'Scilab'), ('SDLBASIC', 'Sdlbasic'), ('SMALLTALK', 'Smalltalk'), ('SMARTY', 'Smarty'), ('STANDARDML', 'Standardml'), ('STONESCRIPT', 'Stonescript'), ('SUPERCOLLIDER', 'Supercollider'), ('SWIFT', 'Swift'), ('SYSTEMVERILOG', 'Systemverilog'), ('T_SQL', 'T Sql'), ('TCL', 'Tcl'), ('TEXGRAPH', 'Texgraph'), ('TERA_TERM', 'Tera Term'), ('TYPESCRIPT', 'Typescript'), ('TYPOSCRIPT', 'Typoscript'), ('UPC', 'Upc'), ('UNICON', 'Unicon'), ('UNREALSCRIPT', 'Unrealscript'), ('URBI', 'Urbi'), ('VB_NET', 'Vb Net'), ('VBSCRIPT', 'Vbscript'), ('VHDL', 'Vhdl'), ('VIM', 'Vim'), ('VALA', 'Vala'), ('VEDIT', 'Vedit'), ('VERILOG', 'Verilog'), ('VISUAL_PRO_LOG', 'Visual Pro Log'), ('VISUALBASIC', 'Visualbasic'), ('VISUALFOXPRO', 'Visualfoxpro'), ('WHOIS', 'Whois'), ('WHITESPACE', 'Whitespace'), ('WINBATCH', 'Winbatch'), ('XBASIC', 'Xbasic'), ('XML', 'Xml'), ('XPP', 'Xpp'), ('XOJO', 'Xojo'), ('XORG_CONFIG', 'Xorg Config'), ('YAML', 'Yaml'), ('YARA', 'Yara'), ('Z80_ASSEMBLER', 'Z80 Assembler'), ('ZXBASIC', 'Zxbasic'), ('AUTOCONF', 'Autoconf'), ('JQUERY', 'Jquery'), ('MIRC', 'Mirc'), ('NEWLISP', 'Newlisp'), ('THINBASIC', 'Thinbasic')], default='NONE', max_length=50)),
                ('is_password', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(related_name='categories', to='app.categorymodel')),
                ('tags', models.ManyToManyField(related_name='tags', to='app.tagmodel')),
            ],
            options={
                'verbose_name_plural': 'Notes',
            },
        ),
    ]
